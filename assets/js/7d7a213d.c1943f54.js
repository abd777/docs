"use strict";(self.webpackChunkopenapi_stack=self.webpackChunkopenapi_stack||[]).push([[5123],{4137:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(a),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:r,o[1]=p;for(var l=2;l<i;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9393:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var n=a(7462),r=(a(7294),a(4137));const i={sidebar_position:20},o="Reference",p={unversionedId:"openapi-client-axios/api",id:"openapi-client-axios/api",title:"Reference",description:"Class OpenAPIClientAxios",source:"@site/docs/openapi-client-axios/api.md",sourceDirName:"openapi-client-axios",slug:"/openapi-client-axios/api",permalink:"/docs/openapi-client-axios/api",draft:!1,editUrl:"https://github.com/openapistack/docs/edit/main/docs/openapi-client-axios/api.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Bundling",permalink:"/docs/openapi-client-axios/bundling"},next:{title:"Quick Start: CLI",permalink:"/docs/openapicmd/intro"}},s={},l=[{value:"Class OpenAPIClientAxios",id:"class-openapiclientaxios",level:2},{value:"new OpenAPIClientAxios(opts)",id:"new-openapiclientaxiosopts",level:3},{value:"Parameter: opts",id:"parameter-opts",level:4},{value:"Parameter: opts.definition",id:"parameter-optsdefinition",level:4},{value:"Parameter: opts.withServer",id:"parameter-optswithserver",level:4},{value:"Parameter: opts.axiosConfigDefaults",id:"parameter-optsaxiosconfigdefaults",level:4},{value:"Parameter: opts.transformOperationName",id:"parameter-optstransformoperationname",level:4},{value:"Parameter: opts.transformOperationMethod",id:"parameter-optstransformoperationmethod",level:4},{value:".init()",id:"init",level:3},{value:".initSync()",id:"initsync",level:3},{value:".getClient()",id:"getclient",level:3},{value:".withServer(server)",id:"withserverserver",level:3},{value:"Parameter: server",id:"parameter-server",level:4},{value:".getBaseURL(operation?)",id:"getbaseurloperation",level:3},{value:"Parameter: operation",id:"parameter-operation",level:4},{value:".getRequestConfigForOperation(operation, args)",id:"getrequestconfigforoperationoperation-args",level:3},{value:"Parameter: operation",id:"parameter-operation-1",level:4},{value:"Parameter: args",id:"parameter-args",level:4},{value:".getAxiosInstance()",id:"getaxiosinstance",level:3},{value:".getAxiosConfigForOperation(operation, args)",id:"getaxiosconfigforoperationoperation-args",level:3},{value:"Parameter: operation",id:"parameter-operation-2",level:4},{value:"Parameter: args",id:"parameter-args-1",level:4},{value:"Axios Client Instance",id:"axios-client-instance",level:2},{value:"Operation Method",id:"operation-method",level:2},{value:"Operation Method Arguments",id:"operation-method-arguments",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Data",id:"data",level:3},{value:"Config",id:"config",level:3},{value:"Request Config Object",id:"request-config-object",level:2},{value:"Paths Dictionary",id:"paths-dictionary",level:2}],c={toc:l},u="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"reference"},"Reference"),(0,r.kt)("h2",{id:"class-openapiclientaxios"},"Class OpenAPIClientAxios"),(0,r.kt)("p",null,"OpenAPIClientAxios is the main class of this module. However, it's entire purpose is to create an axios client instance\nconfigured to consume an API described by the OpenAPI definition."),(0,r.kt)("h3",{id:"new-openapiclientaxiosopts"},"new OpenAPIClientAxios(opts)"),(0,r.kt)("p",null,"Creates an instance of OpenAPIClientAxios and returns it."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const api = new OpenAPIClientAxios({\n  definition: '/openapi.json',\n  withServer: 0,\n  axiosConfigDefaults: {\n    withCredentials: true,\n    headers: {\n      'Cache-Control': 'no-cache',\n    },\n  },\n});\n")),(0,r.kt)("h4",{id:"parameter-opts"},"Parameter: opts"),(0,r.kt)("p",null,"Constructor options"),(0,r.kt)("h4",{id:"parameter-optsdefinition"},"Parameter: opts.definition"),(0,r.kt)("p",null,"The OpenAPI definition as a URL or ",(0,r.kt)("a",{parentName:"p",href:"#document-object"},"Document object"),"."),(0,r.kt)("p",null,"To support YAML openapi files, ",(0,r.kt)("inlineCode",{parentName:"p"},"js-yaml")," must be installed."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Document | string")),(0,r.kt)("h4",{id:"parameter-optswithserver"},"Parameter: opts.withServer"),(0,r.kt)("p",null,"The default server to use. Either by index, description or a full server object to override with."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," or ","[Server Object]","(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#serverObject"},"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#serverObject")),(0,r.kt)("h4",{id:"parameter-optsaxiosconfigdefaults"},"Parameter: opts.axiosConfigDefaults"),(0,r.kt)("p",null,"Optional. Default axios config for the instance. Applied when instance is created."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/axios/axios#request-config"},(0,r.kt)("inlineCode",{parentName:"a"},"AxiosRequestConfig"))),(0,r.kt)("h4",{id:"parameter-optstransformoperationname"},"Parameter: opts.transformOperationName"),(0,r.kt)("p",null,"Optional. Override the default method name resolution strategy (default: use ",(0,r.kt)("inlineCode",{parentName:"p"},"operationId")," as method name)"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"(operationId: string) => string")),(0,r.kt)("p",null,"For typegen: You can pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"transformOperationName")," using the ",(0,r.kt)("inlineCode",{parentName:"p"},"-t")," ot ",(0,r.kt)("inlineCode",{parentName:"p"},"--transformOperationName")," command line flag."),(0,r.kt)("h4",{id:"parameter-optstransformoperationmethod"},"Parameter: opts.transformOperationMethod"),(0,r.kt)("p",null,"Optional. Transforms the returned operation method (default: do not transform)"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"(operationMethod: UnknownOperationMethod, operationToTransform: Operation) => UnknownOperationMethod")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"operation")," is also provided to the function, such that you can also conditionally transform the method."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const api = new OpenAPIClientAxios({ \n  definition: 'https://example.com/api/openapi.json',\n  transformOperationMethod: (operationMethod, operation) => {\n    return (params, body, config) => {\n      // set default workspaceId for all operations\n      params.workspaceId = '63e90965-07a7-43b3-8f5d-d2e8fa90e8d0';\n      return operationMethod(params, body, config);\n    }\n  }\n});\n")),(0,r.kt)("h3",{id:"init"},".init()"),(0,r.kt)("p",null,"Initalizes OpenAPIClientAxios"),(0,r.kt)("p",null,"Returns a promise of the created member axios instance."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Parses the input definition into a JS object. If the input definition is a URL, it will be resolved"),(0,r.kt)("li",{parentName:"ol"},"Dereferences the definition for use."),(0,r.kt)("li",{parentName:"ol"},"Creates the member axios instance"),(0,r.kt)("li",{parentName:"ol"},"Sets ",(0,r.kt)("inlineCode",{parentName:"li"},"api.initialised = true")," and returns the created axios instance")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"await api.init();\n")),(0,r.kt)("h3",{id:"initsync"},".initSync()"),(0,r.kt)("p",null,"Synchronous version of ",(0,r.kt)("a",{parentName:"p",href:"#init"},(0,r.kt)("inlineCode",{parentName:"a"},".init()"))),(0,r.kt)("p",null,"Initalizes OpenAPIClientAxios and creates the axios client instance."),(0,r.kt)("p",null,"Note: Only works when the input definition is a valid OpenAPI v3 object."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"api.initSync();\n")),(0,r.kt)("h3",{id:"getclient"},".getClient()"),(0,r.kt)("p",null,"Returns a promise of the member axios instance. Will run .init() if API is not initalised yet."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const client = await api.getClient();\n")),(0,r.kt)("h3",{id:"withserverserver"},".withServer(server)"),(0,r.kt)("p",null,"Set the default server base url to use for client."),(0,r.kt)("h4",{id:"parameter-server"},"Parameter: server"),(0,r.kt)("p",null,"The default server to use. Either an index, description or a full server object to override with."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// by index\napi.withServer(1);\n// by description property\napi.withServer('EU server');\n// by server object (override)\napi.withServer({ url: 'https://example.com/api/', description: 'Eu Server' });\n")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," or ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#serverObject"},"Server Object")),(0,r.kt)("h3",{id:"getbaseurloperation"},".getBaseURL(operation?)"),(0,r.kt)("p",null,"Gets the API baseurl defined in the servers property"),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const baseURL = api.getBaseUrl();\nconst baseURLForOperation = api.getBaseUrl('operationId');\n")),(0,r.kt)("h4",{id:"parameter-operation"},"Parameter: operation"),(0,r.kt)("p",null,"Optional. The Operation object or operationId that may override the baseURL with its own or path object's servers\nproperty."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Operation")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," (operationId)"),(0,r.kt)("h3",{id:"getrequestconfigforoperationoperation-args"},".getRequestConfigForOperation(operation, args)"),(0,r.kt)("p",null,"Creates a generic request config object for operation + arguments top be used for calling the API."),(0,r.kt)("p",null,"This function contains the logic that handles operation method parameters."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const request = api.getRequestConfigForOperation('updatePet', [1, { name: 'Odie' }])\n")),(0,r.kt)("h4",{id:"parameter-operation-1"},"Parameter: operation"),(0,r.kt)("p",null,"The operation to call. Either as an operation object or string (operationId)."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Operation")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," (operationId)"),(0,r.kt)("h4",{id:"parameter-args"},"Parameter: args"),(0,r.kt)("p",null,"The operation method arguments."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"OperationMethodArguments")),(0,r.kt)("h3",{id:"getaxiosinstance"},".getAxiosInstance()"),(0,r.kt)("p",null,"Creates a new axios instance, extends it and returns it."),(0,r.kt)("p",null,"While initalising with ",(0,r.kt)("a",{parentName:"p",href:"#init"},(0,r.kt)("inlineCode",{parentName:"a"},".init()"))," or ",(0,r.kt)("a",{parentName:"p",href:"#initsync"},".initSync()")," OpenAPIClientAxios calls this function to create the member client."),(0,r.kt)("p",null,"Note: Requires the API to be initalised first if run outside of .init() methods."),(0,r.kt)("h3",{id:"getaxiosconfigforoperationoperation-args"},".getAxiosConfigForOperation(operation, args)"),(0,r.kt)("p",null,"Creates an axios config for operation + arguments to be used for calling the API."),(0,r.kt)("p",null,"This function calls ",(0,r.kt)("inlineCode",{parentName:"p"},".getRequestConfigForOperation()")," internally and maps the values to be suitable for axios."),(0,r.kt)("p",null,"Returns an ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/axios/axios#request-config"},"AxiosRequestConfig")," object"),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const request = api.getAxiosConfigForOperation('getPets', [{ petId: 1 }])\n")),(0,r.kt)("h4",{id:"parameter-operation-2"},"Parameter: operation"),(0,r.kt)("p",null,"The operation to call. Either as an operation object or string (operationId)."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Operation")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," (operationId)"),(0,r.kt)("h4",{id:"parameter-args-1"},"Parameter: args"),(0,r.kt)("p",null,"The operation method arguments."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"OperationMethodArguments")),(0,r.kt)("h2",{id:"axios-client-instance"},"Axios Client Instance"),(0,r.kt)("p",null,"When OpenAPIClientAxios is initalised, a member\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/axios/axios#creating-an-instance"},"axios client instance")," is created."),(0,r.kt)("p",null,"The client instance can be accessed either directly via ",(0,r.kt)("inlineCode",{parentName:"p"},"api.client")," getter, or ",(0,r.kt)("inlineCode",{parentName:"p"},"api.getClient()"),"."),(0,r.kt)("p",null,"The member axios client instance is a regular instance of axios with ",(0,r.kt)("a",{parentName:"p",href:"#operation-method"},"Operation Methods")," created to\nprovide an easy JavaScript API to call API operations."),(0,r.kt)("p",null,"In addition to operation methods, the Axios client instance baseURL is pre-configured to match the first OpenAPI\ndefinition ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#serverObject"},"servers")," property."),(0,r.kt)("p",null,"The parent OpenAPIClientAxios instance can also be accessed from the client via ",(0,r.kt)("inlineCode",{parentName:"p"},"client.api"),"."),(0,r.kt)("h2",{id:"operation-method"},"Operation Method"),(0,r.kt)("p",null,"Operation methods are the main API used to call OpenAPI operations."),(0,r.kt)("p",null,"Each method is generated during ",(0,r.kt)("a",{parentName:"p",href:"#init"},(0,r.kt)("inlineCode",{parentName:"a"},".init()"))," and is attached as a property to the axios client instance."),(0,r.kt)("h2",{id:"operation-method-arguments"},"Operation Method Arguments"),(0,r.kt)("p",null,"Each operation method takes three arguments:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"client.operationId(parameters?, data?, config?)\n")),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,"The first argument is used to pass parameters available for the operation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// GET /pets/{petId}\nclient.getPet({ petId: 1 })\n")),(0,r.kt)("p",null,"For syntactic sugar purposes, you can also specify a single implicit parameter value, in which case OpenAPIClientAxios\nwill look for the first required parameter for the operation. Usually this is will be a path parameter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// GET /pets/{petId} - getPet\nclient.getPet(1)\n")),(0,r.kt)("p",null,"Alternatively, you can explicitly specify parameters in array form. This method allows you to set custom parameters not defined\nin the OpenAPI spec."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// GET /pets?search=Garfield - searchPets\nclient.searchPets([{ name: 'search', value: 'Garfield', in: 'query' }])\n")),(0,r.kt)("p",null,"The type of the parameters can be any of:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"query"),(0,r.kt)("li",{parentName:"ul"},"header"),(0,r.kt)("li",{parentName:"ul"},"path"),(0,r.kt)("li",{parentName:"ul"},"cookie")),(0,r.kt)("h3",{id:"data"},"Data"),(0,r.kt)("p",null,"The second argument is used to pass the requestPayload"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// PUT /pets/1 - updatePet\nclient.updatePet(1, { name: 'Odie' })\n")),(0,r.kt)("p",null,"More complex payloads, such as Node.js streams or FormData supported by Axios can be used."),(0,r.kt)("p",null,"The first argument can be set to null if there are no parameters required for the operation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// POST /pets - createPet\nclient.updatePet(null, { name: 'Garfield' })\n")),(0,r.kt)("h3",{id:"config"},"Config"),(0,r.kt)("p",null,"The last argument is the config object."),(0,r.kt)("p",null,"The config object is an ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/axios/axios#request-config"},(0,r.kt)("inlineCode",{parentName:"a"},"AxiosRequestConfig"))," object. You can use it to\noverride axios request config parameters, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"headers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"timeout"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"withCredentials")," and many more."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// POST /user - createUser\nclient.createUser(null, { user: 'admin', pass: '123' }, { headers: { 'x-api-key': 'secret' } });\n")),(0,r.kt)("h2",{id:"request-config-object"},"Request Config Object"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestConfig")," object gets created as part of every operation method call."),(0,r.kt)("p",null,"It represents a generic HTTP request to be executed."),(0,r.kt)("p",null,"A request config object can be created without calling an operation method using\n",(0,r.kt)("a",{parentName:"p",href:"#getrequestconfigforoperationoperation-args"},(0,r.kt)("inlineCode",{parentName:"a"},".getRequestConfigForOperation()"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { RequestConfig } from 'openapi-client-axios';\n")),(0,r.kt)("p",null,"Example object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const requestConfig = {\n  method: 'put', // HTTP method\n  url: 'http://localhost:8000/pets/1?return=id,name', // full URL including protocol, host, path and query string\n  path: '/pets/1', // path for the operation (relative to server base URL)\n  pathParams: { petId: 1 }, // path parameters\n  query: { return: ['id', 'name'] }, // query parameters\n  queryString: 'return=id,name', // query string\n  headers: {\n    'content-type': 'application/json;charset=UTF-8',\n    'accept': 'application/json' ,\n    'cookie': 'x-api-key=secret',\n  }, // HTTP headers, including cookie\n  cookies: { 'x-api-key': 'secret' }, // cookies\n  payload: {\n    name: 'Garfield',\n    age: 35,\n  }, // the request payload passed as-is\n}\n")),(0,r.kt)("h2",{id:"paths-dictionary"},"Paths Dictionary"),(0,r.kt)("p",null,"In addition to operationIds, OpenAPIClient also allows calling operation\nmethods, using the operations' path and HTTP method."),(0,r.kt)("p",null,"The paths dictionary contains each path found in the OAS definition as keys,\nand an object with each registered operation method as the value."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"client.paths['/pets'].get(); // GET /pets, same as calling client.getPets()\nclient.paths['/pets'].post(); // POST /pets\nclient.paths['/pets/{petId}'].put(1); // PUT /pets/1\nclient.paths['/pets/{petId}/owner/{ownerId}'].get({ petId: 1, ownerId: 2 }) ; // GET /pets/1/owner/2\n")),(0,r.kt)("p",null,"This allows calling operation methods without using their operationIds, which\nmay be sometimes preferred."))}d.isMDXComponent=!0}}]);