"use strict";(self.webpackChunkopenapi_stack=self.webpackChunkopenapi_stack||[]).push([[6129],{4137:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=d(t),h=a,m=u["".concat(s,".").concat(h)]||u[h]||c[h]||o;return t?r.createElement(m,l(l({ref:n},p),{},{components:t})):r.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=h;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var d=2;d<o;d++)l[d]=t[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},6507:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=t(7462),a=(t(7294),t(4137));const o={sidebar_position:4},l="Operation Handlers",i={unversionedId:"openapi-backend/operation-handlers",id:"openapi-backend/operation-handlers",title:"Operation Handlers",description:"Handlers are controllers for operations described in your OpenAPI document. They are registered for each operationId found in the OpenAPI definitions.",source:"@site/docs/openapi-backend/operation-handlers.md",sourceDirName:"openapi-backend",slug:"/openapi-backend/operation-handlers",permalink:"/docs/openapi-backend/operation-handlers",draft:!1,editUrl:"https://github.com/anttiviljami/openapi-stack/edit/main/docs/openapi-backend/operation-handlers.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Framework Examples",permalink:"/docs/openapi-backend/examples"},next:{title:"Request validation",permalink:"/docs/openapi-backend/request-validation"}},s={},d=[{value:"validationFail Handler",id:"validationfail-handler",level:3},{value:"notFound Handler",id:"notfound-handler",level:3},{value:"methodNotAllowed Handler",id:"methodnotallowed-handler",level:3},{value:"notImplemented Handler",id:"notimplemented-handler",level:3},{value:"unauthorizedHandler Handler",id:"unauthorizedhandler-handler",level:3},{value:"postResponseHandler Handler",id:"postresponsehandler-handler",level:3}],p={toc:d},u="wrapper";function c(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"operation-handlers"},"Operation Handlers"),(0,a.kt)("p",null,"Handlers are controllers for operations described in your OpenAPI document. They are registered for each ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#fixed-fields-8"},(0,a.kt)("inlineCode",{parentName:"a"},"operationId"))," found in the OpenAPI definitions."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import type { Context } from "openapi-backend";\nimport type { Request, Response } from "express";\n\nasync function getPetByIdHandler(\n  c: Context<{ id: string }>,\n  _req: Request,\n  res: Response\n) {\n  const id = c.request.params.id;\n  const pet = await pets.getPetById(id);\n  return res.status(200).json({ result: pet });\n}\n\napi.register("getPetById", getPetByIdHandler);\n// or\napi.register({\n  getPetById: getPetByIdHandler,\n});\n')),(0,a.kt)("p",null,"Operation handlers are passed a special ",(0,a.kt)("a",{parentName:"p",href:"/docs/openapi-backend/api#context-object"},"Context object")," as the first argument, which contains the parsed request, the matched API operation and input validation results."),(0,a.kt)("p",null,"Arguments 2 and higher are passed through from ",(0,a.kt)("a",{parentName:"p",href:"/docs/openapi-backend/api#handlerequestreq-handlerargs"},(0,a.kt)("inlineCode",{parentName:"a"},"handleRequest"))),(0,a.kt)("h3",{id:"validationfail-handler"},"validationFail Handler"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"validationFail")," handler gets called by ",(0,a.kt)("inlineCode",{parentName:"p"},".handleRequest()")," if the input validation fails for a request."),(0,a.kt)("p",null,"HINT: You should probably return a 400 status code from this handler."),(0,a.kt)("p",null,"Example handler:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'function validationFailHandler(c, req, res) {\n  return res.status(400).json({ status: 400, err: c.validation.errors });\n}\napi.register("validationFail", validationFailHandler);\n')),(0,a.kt)("h3",{id:"notfound-handler"},"notFound Handler"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"notFound")," handler gets called by ",(0,a.kt)("inlineCode",{parentName:"p"},".handleRequest()")," if the path doesn't\nmatch an operation in the API definitions."),(0,a.kt)("p",null,"HINT: You should probably return a 404 status code from this handler."),(0,a.kt)("p",null,"Example handler:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'function notFound(c, req, res) {\n  return res.status(404).json({ status: 404, err: "Not found" });\n}\napi.register("notFound", notFound);\n')),(0,a.kt)("h3",{id:"methodnotallowed-handler"},"methodNotAllowed Handler"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"methodNotAllowed")," handler gets called by ",(0,a.kt)("inlineCode",{parentName:"p"},".handleRequest()")," if request\nmethod does not match any operations for the path."),(0,a.kt)("p",null,"If this handler isn't registered, the ",(0,a.kt)("a",{parentName:"p",href:"#notfound-handler"},"notFound Handler")," will be used instead."),(0,a.kt)("p",null,"HINT: You should probably return a 405 status code from this handler."),(0,a.kt)("p",null,"Example handler:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'function methodNotAllowed(c, req, res) {\n  return res.status(405).json({ status: 405, err: "Method not allowed" });\n}\napi.register("methodNotAllowed", methodNotAllowed);\n')),(0,a.kt)("h3",{id:"notimplemented-handler"},"notImplemented Handler"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"notImplemented")," handler gets called by ",(0,a.kt)("inlineCode",{parentName:"p"},".handleRequest()")," if no other Operation Handler has been registered for\nthe matched operation."),(0,a.kt)("p",null,"HINT: You can either mock the response or return a 501 status code."),(0,a.kt)("p",null,"Example handler:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'function notImplementedHandler(c, req, res) {\n  return res\n    .status(404)\n    .json({ status: 501, err: "No handler registered for operation" });\n}\napi.register("notImplemented", notImplementedHandler);\n')),(0,a.kt)("h3",{id:"unauthorizedhandler-handler"},"unauthorizedHandler Handler"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"unauthorizedHandler")," handler gets called by ",(0,a.kt)("inlineCode",{parentName:"p"},".handleRequest()")," if security\nrequirements are not met after checking ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#securityRequirementObject"},"Security Requirements"),"\nand calling their ",(0,a.kt)("a",{parentName:"p",href:"#security-handlers"},"Security Handlers"),"."),(0,a.kt)("p",null,"HINT: You should probably return a 401 or 403 code from this handler and\ninstruct the client to authenticate."),(0,a.kt)("p",null,"Example handler:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'function unauthorizedHandler(c, req, res) {\n  return res\n    .status(401)\n    .json({ status: 401, err: "Please authenticate first" });\n}\napi.register("unauthorizedHandler", unauthorizedHandler);\n')),(0,a.kt)("p",null,"If no ",(0,a.kt)("inlineCode",{parentName:"p"},"unauthorizedHandler")," is registered, the Security Handlers will still be\ncalled and their output and the authorization status for the request can be\nchecked in operation handlers via the ",(0,a.kt)("a",{parentName:"p",href:"#context-object"},(0,a.kt)("inlineCode",{parentName:"a"},"context.security")," property"),"."),(0,a.kt)("h3",{id:"postresponsehandler-handler"},"postResponseHandler Handler"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"postResponseHandler")," handler gets called by ",(0,a.kt)("inlineCode",{parentName:"p"},".handleRequest()")," after resolving the response handler."),(0,a.kt)("p",null,"The return value of the response handler will be passed in the context object ",(0,a.kt)("inlineCode",{parentName:"p"},"response")," property."),(0,a.kt)("p",null,"HINT: You can use the postResponseHandler to validate API responses against your response schema"),(0,a.kt)("p",null,"Example handler:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'function postResponseHandler(c, req, res) {\n  const valid = c.api.validateResponse(c.response, c.operation);\n  if (valid.errors) {\n    // response validation failed\n    return res.status(502).json({ status: 502, err: valid.errors });\n  }\n  return res.status(200).json(c.response);\n}\napi.register("postResponseHandler", postResponseHandler);\n')))}c.isMDXComponent=!0}}]);