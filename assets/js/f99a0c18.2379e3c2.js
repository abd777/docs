"use strict";(self.webpackChunkopenapi_stack=self.webpackChunkopenapi_stack||[]).push([[2044],{4137:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>y});var a=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=a.createContext({}),d=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},l=function(e){var n=d(e.components);return a.createElement(i.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},P=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),m=d(t),P=s,y=m["".concat(i,".").concat(P)]||m[P]||c[P]||r;return t?a.createElement(y,p(p({ref:n},l),{},{components:t})):a.createElement(y,p({ref:n},l))}));function y(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,p=new Array(r);p[0]=P;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o[m]="string"==typeof e?e:s,p[1]=o;for(var d=2;d<r;d++)p[d]=t[d];return a.createElement.apply(null,p)}return a.createElement.apply(null,t)}P.displayName="MDXCreateElement"},2827:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>p,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=t(7462),s=(t(7294),t(4137));const r={sidebar_position:3,title:"Typegen"},p="Generating Types",o={unversionedId:"openapi-client-axios/typegen",id:"openapi-client-axios/typegen",title:"Typegen",description:"It's recommended to use openapicmd typegen to generate types instead of directly installing the typegen package.",source:"@site/docs/openapi-client-axios/typegen.md",sourceDirName:"openapi-client-axios",slug:"/openapi-client-axios/typegen",permalink:"/docs/openapi-client-axios/typegen",draft:!1,editUrl:"https://github.com/openapistack/docs/edit/main/docs/openapi-client-axios/typegen.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Typegen"},sidebar:"tutorialSidebar",previous:{title:"Operation Methods",permalink:"/docs/openapi-client-axios/usage"},next:{title:"Bundling",permalink:"/docs/openapi-client-axios/bundling"}},i={},d=[{value:"Usage",id:"usage",level:2},{value:"Typesafe Clients",id:"typesafe-clients",level:2},{value:"Importing generated types",id:"importing-generated-types",level:2},{value:"Advanced: <code>--transformOperationName</code>",id:"advanced---transformoperationname",level:2},{value:"Example type file",id:"example-type-file",level:2}],l={toc:d},m="wrapper";function c(e){let{components:n,...r}=e;return(0,s.kt)(m,(0,a.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"generating-types"},"Generating Types"),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"It's recommended to use ",(0,s.kt)("a",{parentName:"p",href:"/docs/openapicmd/typegen/"},(0,s.kt)("inlineCode",{parentName:"a"},"openapicmd typegen"))," to generate types instead of directly installing the typegen package.")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"openapi-client-axios-typegen")," is a command line tool to generate easy to use Typescript types from\nOpenAPI files."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"TypeScript IntelliSense",src:t(1101).Z,width:"768",height:"445"})),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"npm install -g openapi-client-axios-typegen\n")),(0,s.kt)("p",null,"or with npx:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"npx openapi-client-axios-typegen\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"Usage: typegen [file]\n\nOptions:\n      --help                    Show help                              [boolean]\n      --version                 Show version number                    [boolean]\n  -t, --transformOperationName                                          [string]\n\nExamples:\n  typegen ./openapi.yml > openapi.d.ts\n  typegen https://openapistack.co/petstore.openapi.json > openapi.d.ts\n")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"typegen")," supports both local and remote files:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"typegen ./openapi.yaml > openapi.d.ts # local file\ntypegen https://petstore3.swagger.io/api/v3/openapi.json > openapi.d.ts # remote url\n")),(0,s.kt)("h2",{id:"typesafe-clients"},"Typesafe Clients"),(0,s.kt)("p",null,"The output of ",(0,s.kt)("inlineCode",{parentName:"p"},"typegen")," exports a type called ",(0,s.kt)("inlineCode",{parentName:"p"},"Client"),", which can be directly used with clients created with ",(0,s.kt)("inlineCode",{parentName:"p"},"OpenAPIClientAxios"),"."),(0,s.kt)("p",null,"Both the ",(0,s.kt)("inlineCode",{parentName:"p"},"api.getClient()")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"api.init()")," methods support passing in a Client type."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Client as PetStoreClient } from "./openapi.d.ts";\n\nconst client = await api.init<PetStoreClient>();\nconst client = await api.getClient<PetStoreClient>();\n')),(0,s.kt)("h2",{id:"importing-generated-types"},"Importing generated types"),(0,s.kt)("p",null,"You can directly import types defined as schemas in your openapi spec as Typescript types:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import type { Pet, User } from "./openapi.d.ts";\n\nconst myPet: Pet = {\n  id: 1,\n  name: "My Pet",\n  tag: "My Tag",\n};\n\nconst myUser: User = {\n  id: 1,\n  name: "My User",\n};\n')),(0,s.kt)("h2",{id:"advanced---transformoperationname"},"Advanced: ",(0,s.kt)("inlineCode",{parentName:"h2"},"--transformOperationName")),(0,s.kt)("p",null,"You can provide a predicate function to typegen to transform operation names in the output type file."),(0,s.kt)("p",null,"The function needs to be exported from a module:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'// operation-transform.ts\nexport const prefix = (operationId: string) => ["$", operationId].join("");\n')),(0,s.kt)("p",null,"Example usage:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"typegen ./openapi.yaml --transformOperationName operation-transform.prefix > openapi.d.ts\n")),(0,s.kt)("h2",{id:"example-type-file"},"Example type file"),(0,s.kt)("p",null,"Here's a full example of a generated type file:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'// openapi.d.ts\n\nimport type {\n  OpenAPIClient,\n  Parameters,\n  UnknownParamsObject,\n  OperationResponse,\n  AxiosRequestConfig,\n} from "openapi-client-axios";\n\ndeclare namespace Components {\n  namespace RequestBodies {\n    export type PetPayload = Schemas.PetPayload;\n  }\n  namespace Schemas {\n    /**\n     * PetId\n     * Unique identifier for pet in database\n     * example:\n     * 1\n     */\n    export type PetId = number;\n    export interface PetPayload {\n      /**\n       * PetName\n       * Name of the pet\n       * example:\n       * Garfield\n       */\n      name: string;\n    }\n    /**\n     * QueryLimit\n     * Number of items to return\n     * example:\n     * 25\n     */\n    export type QueryLimit = number;\n    /**\n     * QueryOffset\n     * Starting offset for returning items\n     * example:\n     * 0\n     */\n    export type QueryOffset = number;\n  }\n}\ndeclare namespace Paths {\n  namespace CreatePet {\n    export type RequestBody = Components.RequestBodies.PetPayload;\n    namespace Responses {\n      export interface $201 {}\n    }\n  }\n  namespace DeletePetById {\n    namespace Parameters {\n      export type Id =\n        /**\n         * PetId\n         * Unique identifier for pet in database\n         * example:\n         * 1\n         */\n        Components.Schemas.PetId;\n    }\n    export interface PathParameters {\n      id: Parameters.Id;\n    }\n    namespace Responses {\n      export interface $200 {}\n      export interface $404 {}\n    }\n  }\n  namespace GetOwnerByPetId {\n    namespace Parameters {\n      export type Id =\n        /**\n         * PetId\n         * Unique identifier for pet in database\n         * example:\n         * 1\n         */\n        Components.Schemas.PetId;\n    }\n    export interface PathParameters {\n      id: Parameters.Id;\n    }\n    namespace Responses {\n      export interface $200 {}\n      export interface $404 {}\n    }\n  }\n  namespace GetPetById {\n    namespace Parameters {\n      export type Id =\n        /**\n         * PetId\n         * Unique identifier for pet in database\n         * example:\n         * 1\n         */\n        Components.Schemas.PetId;\n    }\n    export interface PathParameters {\n      id: Parameters.Id;\n    }\n    namespace Responses {\n      export interface $200 {}\n      export interface $404 {}\n    }\n  }\n  namespace GetPetOwner {\n    namespace Parameters {\n      export type OwnerId =\n        /**\n         * PetId\n         * Unique identifier for pet in database\n         * example:\n         * 1\n         */\n        Components.Schemas.PetId;\n      export type PetId =\n        /**\n         * PetId\n         * Unique identifier for pet in database\n         * example:\n         * 1\n         */\n        Components.Schemas.PetId;\n    }\n    export interface PathParameters {\n      petId: Parameters.PetId;\n      ownerId: Parameters.OwnerId;\n    }\n    namespace Responses {\n      export interface $200 {}\n      export interface $404 {}\n    }\n  }\n  namespace GetPets {\n    namespace Parameters {\n      export type Limit =\n        /**\n         * QueryLimit\n         * Number of items to return\n         * example:\n         * 25\n         */\n        Components.Schemas.QueryLimit;\n      export type Offset =\n        /**\n         * QueryOffset\n         * Starting offset for returning items\n         * example:\n         * 0\n         */\n        Components.Schemas.QueryOffset;\n    }\n    export interface QueryParameters {\n      limit?: Parameters.Limit;\n      offset?: Parameters.Offset;\n    }\n    namespace Responses {\n      export interface $200 {}\n    }\n  }\n  namespace GetPetsMeta {\n    namespace Responses {\n      export interface $200 {}\n    }\n  }\n  namespace GetPetsRelative {\n    namespace Responses {\n      export interface $200 {}\n    }\n  }\n  namespace ReplacePetById {\n    namespace Parameters {\n      export type Id =\n        /**\n         * PetId\n         * Unique identifier for pet in database\n         * example:\n         * 1\n         */\n        Components.Schemas.PetId;\n    }\n    export interface PathParameters {\n      id: Parameters.Id;\n    }\n    export type RequestBody = Components.RequestBodies.PetPayload;\n    namespace Responses {\n      export interface $200 {}\n      export interface $404 {}\n    }\n  }\n  namespace UpdatePetById {\n    namespace Parameters {\n      export type Id =\n        /**\n         * PetId\n         * Unique identifier for pet in database\n         * example:\n         * 1\n         */\n        Components.Schemas.PetId;\n    }\n    export interface PathParameters {\n      id: Parameters.Id;\n    }\n    export type RequestBody = Components.RequestBodies.PetPayload;\n    namespace Responses {\n      export interface $200 {}\n      export interface $404 {}\n    }\n  }\n}\n\nexport interface OperationMethods {\n  /**\n   * getPets - List pets\n   *\n   * Returns all pets in database\n   */\n  "getPets"(\n    parameters?: Parameters<Paths.GetPets.QueryParameters> | null,\n    data?: any,\n    config?: AxiosRequestConfig\n  ): OperationResponse<Paths.GetPets.Responses.$200>;\n  /**\n   * createPet - Create a pet\n   *\n   * Crete a new pet into the database\n   */\n  "createPet"(\n    parameters?: Parameters<UnknownParamsObject> | null,\n    data?: Paths.CreatePet.RequestBody,\n    config?: AxiosRequestConfig\n  ): OperationResponse<Paths.CreatePet.Responses.$201>;\n  /**\n   * getPetById - Get a pet\n   *\n   * Returns a pet by its id in database\n   */\n  "getPetById"(\n    parameters?: Parameters<Paths.GetPetById.PathParameters> | null,\n    data?: any,\n    config?: AxiosRequestConfig\n  ): OperationResponse<Paths.GetPetById.Responses.$200>;\n  /**\n   * replacePetById - Replace pet\n   *\n   * Replace an existing pet in the database\n   */\n  "replacePetById"(\n    parameters?: Parameters<Paths.ReplacePetById.PathParameters> | null,\n    data?: Paths.ReplacePetById.RequestBody,\n    config?: AxiosRequestConfig\n  ): OperationResponse<Paths.ReplacePetById.Responses.$200>;\n  /**\n   * updatePetById - Update pet\n   *\n   * Update an existing pet in the database\n   */\n  "updatePetById"(\n    parameters?: Parameters<Paths.UpdatePetById.PathParameters> | null,\n    data?: Paths.UpdatePetById.RequestBody,\n    config?: AxiosRequestConfig\n  ): OperationResponse<Paths.UpdatePetById.Responses.$200>;\n  /**\n   * deletePetById - Delete a pet\n   *\n   * Deletes a pet by its id in database\n   */\n  "deletePetById"(\n    parameters?: Parameters<Paths.DeletePetById.PathParameters> | null,\n    data?: any,\n    config?: AxiosRequestConfig\n  ): OperationResponse<Paths.DeletePetById.Responses.$200>;\n  /**\n   * getOwnerByPetId - Get a pet\'s owner\n   *\n   * Get the owner for a pet\n   */\n  "getOwnerByPetId"(\n    parameters?: Parameters<Paths.GetOwnerByPetId.PathParameters> | null,\n    data?: any,\n    config?: AxiosRequestConfig\n  ): OperationResponse<Paths.GetOwnerByPetId.Responses.$200>;\n  /**\n   * getPetOwner - Get owner by id\n   *\n   * Get the owner for a pet\n   */\n  "getPetOwner"(\n    parameters?: Parameters<Paths.GetPetOwner.PathParameters> | null,\n    data?: any,\n    config?: AxiosRequestConfig\n  ): OperationResponse<Paths.GetPetOwner.Responses.$200>;\n  /**\n   * getPetsMeta - Get pet metadata\n   *\n   * Returns a list of metadata about pets and their relations in the database\n   */\n  "getPetsMeta"(\n    parameters?: Parameters<UnknownParamsObject> | null,\n    data?: any,\n    config?: AxiosRequestConfig\n  ): OperationResponse<Paths.GetPetsMeta.Responses.$200>;\n  /**\n   * getPetsRelative - Get pet metadata\n   *\n   * Returns a list of metadata about pets and their relations in the database\n   */\n  "getPetsRelative"(\n    parameters?: Parameters<UnknownParamsObject> | null,\n    data?: any,\n    config?: AxiosRequestConfig\n  ): OperationResponse<Paths.GetPetsRelative.Responses.$200>;\n}\n\nexport interface PathsDictionary {\n  ["/pets"]: {\n    /**\n     * getPets - List pets\n     *\n     * Returns all pets in database\n     */\n    "get"(\n      parameters?: Parameters<Paths.GetPets.QueryParameters> | null,\n      data?: any,\n      config?: AxiosRequestConfig\n    ): OperationResponse<Paths.GetPets.Responses.$200>;\n    /**\n     * createPet - Create a pet\n     *\n     * Crete a new pet into the database\n     */\n    "post"(\n      parameters?: Parameters<UnknownParamsObject> | null,\n      data?: Paths.CreatePet.RequestBody,\n      config?: AxiosRequestConfig\n    ): OperationResponse<Paths.CreatePet.Responses.$201>;\n  };\n  ["/pets/{id}"]: {\n    /**\n     * getPetById - Get a pet\n     *\n     * Returns a pet by its id in database\n     */\n    "get"(\n      parameters?: Parameters<Paths.GetPetById.PathParameters> | null,\n      data?: any,\n      config?: AxiosRequestConfig\n    ): OperationResponse<Paths.GetPetById.Responses.$200>;\n    /**\n     * replacePetById - Replace pet\n     *\n     * Replace an existing pet in the database\n     */\n    "put"(\n      parameters?: Parameters<Paths.ReplacePetById.PathParameters> | null,\n      data?: Paths.ReplacePetById.RequestBody,\n      config?: AxiosRequestConfig\n    ): OperationResponse<Paths.ReplacePetById.Responses.$200>;\n    /**\n     * updatePetById - Update pet\n     *\n     * Update an existing pet in the database\n     */\n    "patch"(\n      parameters?: Parameters<Paths.UpdatePetById.PathParameters> | null,\n      data?: Paths.UpdatePetById.RequestBody,\n      config?: AxiosRequestConfig\n    ): OperationResponse<Paths.UpdatePetById.Responses.$200>;\n    /**\n     * deletePetById - Delete a pet\n     *\n     * Deletes a pet by its id in database\n     */\n    "delete"(\n      parameters?: Parameters<Paths.DeletePetById.PathParameters> | null,\n      data?: any,\n      config?: AxiosRequestConfig\n    ): OperationResponse<Paths.DeletePetById.Responses.$200>;\n  };\n  ["/pets/{id}/owner"]: {\n    /**\n     * getOwnerByPetId - Get a pet\'s owner\n     *\n     * Get the owner for a pet\n     */\n    "get"(\n      parameters?: Parameters<Paths.GetOwnerByPetId.PathParameters> | null,\n      data?: any,\n      config?: AxiosRequestConfig\n    ): OperationResponse<Paths.GetOwnerByPetId.Responses.$200>;\n  };\n  ["/pets/{petId}/owner/{ownerId}"]: {\n    /**\n     * getPetOwner - Get owner by id\n     *\n     * Get the owner for a pet\n     */\n    "get"(\n      parameters?: Parameters<Paths.GetPetOwner.PathParameters> | null,\n      data?: any,\n      config?: AxiosRequestConfig\n    ): OperationResponse<Paths.GetPetOwner.Responses.$200>;\n  };\n  ["/pets/meta"]: {\n    /**\n     * getPetsMeta - Get pet metadata\n     *\n     * Returns a list of metadata about pets and their relations in the database\n     */\n    "get"(\n      parameters?: Parameters<UnknownParamsObject> | null,\n      data?: any,\n      config?: AxiosRequestConfig\n    ): OperationResponse<Paths.GetPetsMeta.Responses.$200>;\n  };\n  ["/pets/relative"]: {\n    /**\n     * getPetsRelative - Get pet metadata\n     *\n     * Returns a list of metadata about pets and their relations in the database\n     */\n    "get"(\n      parameters?: Parameters<UnknownParamsObject> | null,\n      data?: any,\n      config?: AxiosRequestConfig\n    ): OperationResponse<Paths.GetPetsRelative.Responses.$200>;\n  };\n}\n\nexport type Client = OpenAPIClient<OperationMethods, PathsDictionary>;\n\nexport type PetId = Components.Schemas.PetId;\nexport type PetPayload = Components.Schemas.PetPayload;\nexport type QueryLimit = Components.Schemas.QueryLimit;\nexport type QueryOffset = Components.Schemas.QueryOffset;\n')))}c.isMDXComponent=!0},1101:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/intellisense-b61ace10fd35746dd5bfefa977c0645e.gif"}}]);