"use strict";(self.webpackChunkopenapi_stack=self.webpackChunkopenapi_stack||[]).push([[981],{4137:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),s=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=s(a),c=r,h=u["".concat(l,".").concat(c)]||u[c]||m[c]||o;return a?n.createElement(h,p(p({ref:t},d),{},{components:a})):n.createElement(h,p({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,p=new Array(o);p[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,p[1]=i;for(var s=2;s<o;s++)p[s]=a[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5291:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=a(7462),r=(a(7294),a(4137));const o={sidebar_position:10},p="Reference",i={unversionedId:"openapi-backend/api",id:"openapi-backend/api",title:"Reference",description:"Class OpenAPIBackend",source:"@site/docs/openapi-backend/api.md",sourceDirName:"openapi-backend",slug:"/openapi-backend/api",permalink:"/docs/openapi-backend/api",draft:!1,editUrl:"https://github.com/openapistack/docs/edit/main/docs/openapi-backend/api.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Typescript",permalink:"/docs/openapi-backend/typescript"},next:{title:"API Versioning",permalink:"/docs/openapi-backend/versioning"}},l={},s=[{value:"Class OpenAPIBackend",id:"class-openapibackend",level:2},{value:"new OpenAPIBackend(opts)",id:"new-openapibackendopts",level:3},{value:"Parameter: opts",id:"parameter-opts",level:4},{value:"Parameter: opts.definition",id:"parameter-optsdefinition",level:4},{value:"Parameter: opts.apiRoot",id:"parameter-optsapiroot",level:4},{value:"Parameter: opts.strict",id:"parameter-optsstrict",level:4},{value:"Parameter: opts.quick",id:"parameter-optsquick",level:4},{value:"Parameter: opts.validate",id:"parameter-optsvalidate",level:4},{value:"Parameter: opts.ignoreTrailingSlashes",id:"parameter-optsignoretrailingslashes",level:4},{value:"Parameter: opts.ajvOpts",id:"parameter-optsajvopts",level:4},{value:"Parameter: opts.customizeAjv(originalAjv, ajvOpts, validationContext)",id:"parameter-optscustomizeajvoriginalajv-ajvopts-validationcontext",level:4},{value:"Parameter: opts.handlers",id:"parameter-optshandlers",level:4},{value:".init()",id:"init",level:3},{value:".handleRequest(req, ...handlerArgs)",id:"handlerequestreq-handlerargs",level:3},{value:"Parameter: req",id:"parameter-req",level:4},{value:"Parameter: handlerArgs",id:"parameter-handlerargs",level:4},{value:".validateRequest()",id:"validaterequest",level:3},{value:".validateResponse()",id:"validateresponse",level:3},{value:".validateResponseHeaders()",id:"validateresponseheaders",level:3},{value:".matchOperation()",id:"matchoperation",level:3},{value:".register(operationId, handler)",id:"registeroperationid-handler",level:3},{value:"Parameter: operationId",id:"parameter-operationid",level:4},{value:"Parameter: handler",id:"parameter-handler",level:4},{value:".register(handlers)",id:"registerhandlers",level:3},{value:"Parameter: opts.handlers",id:"parameter-optshandlers-1",level:4},{value:".mockResponseForOperation(operationId, opts?)",id:"mockresponseforoperationoperationid-opts",level:3},{value:"Parameter: operationId",id:"parameter-operationid-1",level:4},{value:"Parameter: opts",id:"parameter-opts-1",level:4},{value:"Parameter: opts.responseStatus",id:"parameter-optsresponsestatus",level:4},{value:"Parameter: opts.mediaType",id:"parameter-optsmediatype",level:4},{value:"Parameter: opts.example",id:"parameter-optsexample",level:4},{value:".registerSecurityHandler(name, handler)",id:"registersecurityhandlername-handler",level:3},{value:"Parameter: name",id:"parameter-name",level:4},{value:"Parameter: handler",id:"parameter-handler-1",level:4},{value:".router",id:"router",level:3},{value:".validator",id:"validator",level:3},{value:"Class OpenAPIRouter",id:"class-openapirouter",level:2},{value:"new OpenAPIRouter(opts)",id:"new-openapirouteropts",level:3},{value:"Parameter: opts",id:"parameter-opts-2",level:4},{value:"Parameter: opts.definition",id:"parameter-optsdefinition-1",level:4},{value:"Parameter: opts.apiRoot",id:"parameter-optsapiroot-1",level:4},{value:"Parameter: opts.ignoreTrailingSlashes",id:"parameter-optsignoretrailingslashes-1",level:4},{value:".matchOperation(req)",id:"matchoperationreq",level:3},{value:"Parameter: req",id:"parameter-req-1",level:4},{value:".getOperations()",id:"getoperations",level:3},{value:".getOperation(operationId)",id:"getoperationoperationid",level:3},{value:"Parameter: operationId",id:"parameter-operationid-2",level:4},{value:".parseRequest(req, operation?)",id:"parserequestreq-operation",level:3},{value:"Parameter: req",id:"parameter-req-2",level:4},{value:"Parameter: operation",id:"parameter-operation",level:4},{value:"Class OpenAPIValidator",id:"class-openapivalidator",level:2},{value:"new OpenAPIValidator(opts)",id:"new-openapivalidatoropts",level:3},{value:"Parameter: opts",id:"parameter-opts-3",level:4},{value:"Parameter: opts.definition",id:"parameter-optsdefinition-2",level:4},{value:"Parameter: opts.ajvOpts",id:"parameter-optsajvopts-1",level:4},{value:"Parameter: opts.router",id:"parameter-optsrouter",level:4},{value:"Parameter: opts.lazyCompileValidators",id:"parameter-optslazycompilevalidators",level:4},{value:"Parameter: opts.customizeAjv(originalAjv, ajvOpts, validationContext)",id:"parameter-optscustomizeajvoriginalajv-ajvopts-validationcontext-1",level:4},{value:".validateRequest(req, operation?)",id:"validaterequestreq-operation",level:3},{value:"Parameter: req",id:"parameter-req-3",level:4},{value:"Parameter: operation",id:"parameter-operation-1",level:4},{value:".validateResponse(res, operation, statusCode?)",id:"validateresponseres-operation-statuscode",level:3},{value:"Parameter: res",id:"parameter-res",level:4},{value:"Parameter: operation",id:"parameter-operation-2",level:4},{value:"Parameter: statusCode",id:"parameter-statuscode",level:4},{value:".validateResponseHeaders(headers, operation, opts?)",id:"validateresponseheadersheaders-operation-opts",level:3},{value:"Parameter: headers",id:"parameter-headers",level:4},{value:"Parameter: operation",id:"parameter-operation-3",level:4},{value:"Parameter: opts",id:"parameter-opts-4",level:4},{value:"Parameter: opts.statusCode",id:"parameter-optsstatuscode",level:4},{value:"Parameter: opts.setMatchType",id:"parameter-optssetmatchtype",level:4},{value:"Operation Handlers",id:"operation-handlers",level:2},{value:"validationFail Handler",id:"validationfail-handler",level:3},{value:"notFound Handler",id:"notfound-handler",level:3},{value:"methodNotAllowed Handler",id:"methodnotallowed-handler",level:3},{value:"notImplemented Handler",id:"notimplemented-handler",level:3},{value:"unauthorizedHandler Handler",id:"unauthorizedhandler-handler",level:3},{value:"postResponseHandler Handler",id:"postresponsehandler-handler",level:3},{value:"Interfaces",id:"interfaces",level:2},{value:"Document Object",id:"document-object",level:3},{value:"Operation Object",id:"operation-object",level:3},{value:"Context Object",id:"context-object",level:3},{value:"Request Object",id:"request-object",level:3},{value:"ParsedRequest Object",id:"parsedrequest-object",level:3},{value:"ValidationResult Object",id:"validationresult-object",level:3}],d={toc:s},u="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"reference"},"Reference"),(0,r.kt)("h2",{id:"class-openapibackend"},"Class OpenAPIBackend"),(0,r.kt)("p",null,"OpenAPIBackend is the main class you can interact with. You can create a new\ninstance and initalize it with your OpenAPI document and handlers."),(0,r.kt)("p",null,"OpenAPIBackend is also the default import of the ",(0,r.kt)("inlineCode",{parentName:"p"},"openapi-backend")," module. It\ncan be imported in any of the following ways:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import OpenAPIBackend from "openapi-backend";\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { OpenAPIBackend } from "openapi-backend";\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const { OpenAPIBackend } = require("openapi-backend");\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const OpenAPIBackend = require("openapi-backend").default;\n')),(0,r.kt)("h3",{id:"new-openapibackendopts"},"new OpenAPIBackend(opts)"),(0,r.kt)("p",null,"Creates an instance of OpenAPIBackend and returns it."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const api = new OpenAPIBackend({\n  definition: "./openapi.yml",\n  strict: true,\n  quick: false,\n  validate: true,\n  ignoreTrailingSlashes: true,\n  ajvOpts: { unknownFormats: true },\n  customizeAjv: () => new Ajv(),\n});\n')),(0,r.kt)("h4",{id:"parameter-opts"},"Parameter: opts"),(0,r.kt)("p",null,"Constructor options"),(0,r.kt)("h4",{id:"parameter-optsdefinition"},"Parameter: opts.definition"),(0,r.kt)("p",null,"The OpenAPI definition as a file path or ",(0,r.kt)("a",{parentName:"p",href:"#document-object"},"Document object"),"."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Document | string")),(0,r.kt)("h4",{id:"parameter-optsapiroot"},"Parameter: opts.apiRoot"),(0,r.kt)("p",null,'The root URI of your api. All paths will be matched relative to apiRoot (default: "/")'),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"parameter-optsstrict"},"Parameter: opts.strict"),(0,r.kt)("p",null,"Optional. Strict mode, throw errors or warn on OpenAPI spec validation errors (default: false)"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"parameter-optsquick"},"Parameter: opts.quick"),(0,r.kt)("p",null,"Optional. Quick startup. Attempts to optimize startup time by skipping and deferring some parts."),(0,r.kt)("p",null,"This setting is recommended to optimize cold starts in Serverless Function environments such as AWS Lambda / Azure Functions / GCP Cloud Functions."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"parameter-optsvalidate"},"Parameter: opts.validate"),(0,r.kt)("p",null,"Optional. Enable or disable request validation (default: true)"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"parameter-optsignoretrailingslashes"},"Parameter: opts.ignoreTrailingSlashes"),(0,r.kt)("p",null,"Optional. Whether to ignore trailing slashes when routing (default: true)"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"parameter-optsajvopts"},"Parameter: opts.ajvOpts"),(0,r.kt)("p",null,"Optional. The default AJV options to use for validation. See ",(0,r.kt)("a",{parentName:"p",href:"https://ajv.js.org/#options"},"available options")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"AjvOpts")),(0,r.kt)("h4",{id:"parameter-optscustomizeajvoriginalajv-ajvopts-validationcontext"},"Parameter: opts.customizeAjv(originalAjv, ajvOpts, validationContext)"),(0,r.kt)("p",null,"Optional. Customizer function to use custom Ajv for validation."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"AjvCustomizer")),(0,r.kt)("p",null,"Takes in three arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"originalAjv")," the original Ajv instance created by OpenAPIBackend"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ajvOpts")," the opts for the original Ajv instance"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"validationContext")," the context in which this Ajv instance will be used. One of:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'requestBodyValidator'")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'paramsValidator'")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'responseValidator'")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'responseHeadersValidator'"))))),(0,r.kt)("p",null,"Returns an Ajv instance."),(0,r.kt)("h4",{id:"parameter-optshandlers"},"Parameter: opts.handlers"),(0,r.kt)("p",null,"Optional. ",(0,r.kt)("a",{parentName:"p",href:"#operation-handlers"},"Operation Handlers")," to be registered."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"{ [operationId: string]: Handler }")),(0,r.kt)("h3",{id:"init"},".init()"),(0,r.kt)("p",null,"Initalizes the OpenAPIBackend instace for use."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Loads and parses the OpenAPI document passed in constructor options"),(0,r.kt)("li",{parentName:"ol"},"Validates the OpenAPI document"),(0,r.kt)("li",{parentName:"ol"},"Builds validation schemas for all API operations"),(0,r.kt)("li",{parentName:"ol"},"Marks member property ",(0,r.kt)("inlineCode",{parentName:"li"},"initalized")," to true"),(0,r.kt)("li",{parentName:"ol"},"Registers all ",(0,r.kt)("a",{parentName:"li",href:"#operation-handlers"},"Operation Handlers")," passed in constructor options")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"init()")," method should be called right after creating a new instance of OpenAPIBackend. Although for ease of use,\nsome methods like ",(0,r.kt)("inlineCode",{parentName:"p"},"handleRequest()")," will call the method if the initalized member property is set to false."),(0,r.kt)("p",null,"Returns the initalized OpenAPI backend instance."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"api.init();\n")),(0,r.kt)("h3",{id:"handlerequestreq-handlerargs"},".handleRequest(req, ...handlerArgs)"),(0,r.kt)("p",null,"Handles a request"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Routing: Matches the request to an API operation"),(0,r.kt)("li",{parentName:"ol"},"Validation: Validates the request against the API operation schema (skipped when .validate is set to false)"),(0,r.kt)("li",{parentName:"ol"},"Handling: Passes the request on to a registered operation handler")),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const response = await api.handleRequest(\n  {\n    method: req.method,\n    path: req.path,\n    body: req.body,\n    query: req.query,\n    headers: req.headers,\n  },\n  req,\n  res,\n));\n")),(0,r.kt)("h4",{id:"parameter-req"},"Parameter: req"),(0,r.kt)("p",null,"A request to handle."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"#request-object"},(0,r.kt)("inlineCode",{parentName:"a"},"Request"))),(0,r.kt)("h4",{id:"parameter-handlerargs"},"Parameter: handlerArgs"),(0,r.kt)("p",null,"The handler arguments to be passed to the ",(0,r.kt)("a",{parentName:"p",href:"#operation-handlers"},"Operation Handler"),"."),(0,r.kt)("p",null,"These should be the arguments you normally use when handling requests in your backend, such as the Express request and\nresponse or the Lambda event and context."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"any[]")),(0,r.kt)("h3",{id:"validaterequest"},".validateRequest()"),(0,r.kt)("p",null,"Validates a request and returns the result."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"#validaterequestreq-operation"},(0,r.kt)("inlineCode",{parentName:"a"},"OpenAPIValidator.validateRequest()"))),(0,r.kt)("h3",{id:"validateresponse"},".validateResponse()"),(0,r.kt)("p",null,"Validates a response and returns the result."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"#validateresponseres-operation-statuscode"},(0,r.kt)("inlineCode",{parentName:"a"},"OpenAPIValidator.validateResponse()"))),(0,r.kt)("h3",{id:"validateresponseheaders"},".validateResponseHeaders()"),(0,r.kt)("p",null,"Validates response headers and returns the result."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"#validateresponseheadersheaders-operation-opts"},(0,r.kt)("inlineCode",{parentName:"a"},"OpenAPIValidator.validateResponseHeaders()"))),(0,r.kt)("h3",{id:"matchoperation"},".matchOperation()"),(0,r.kt)("p",null,"Matches a request to an API operation (router)."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"#matchoperationreq"},(0,r.kt)("inlineCode",{parentName:"a"},"OpenAPIRouter.matchOperation()"))),(0,r.kt)("h3",{id:"registeroperationid-handler"},".register(operationId, handler)"),(0,r.kt)("p",null,"Registers a handler for an operation."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"api.register('getPets', function (c, req, res) {\n  return {\n    status: 200,\n    body: JSON.stringify(['pet1', 'pet2']),\n  };\n};\n")),(0,r.kt)("h4",{id:"parameter-operationid"},"Parameter: operationId"),(0,r.kt)("p",null,"The operationId of the operation to register a handler for."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"parameter-handler"},"Parameter: handler"),(0,r.kt)("p",null,"The operation handler."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Handler | ErrorHandler")),(0,r.kt)("h3",{id:"registerhandlers"},".register(handlers)"),(0,r.kt)("p",null,"Registers multiple ",(0,r.kt)("a",{parentName:"p",href:"#operation-handlers"},"Operation Handlers"),"."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'api.register({\n  getPets: (req, res) => res.json({ result: ["pet1", "pet2"] }),\n  notFound: (req, res) => res.status(404).json({ err: "not found" }),\n  validationFail: (err, req, res) => res.status(404).json({ err }),\n});\n')),(0,r.kt)("h4",{id:"parameter-optshandlers-1"},"Parameter: opts.handlers"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#operation-handlers"},"Operation Handlers")," to be registered."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"{ [operationId: string]: Handler | ErrorHandler }")),(0,r.kt)("h3",{id:"mockresponseforoperationoperationid-opts"},".mockResponseForOperation(operationId, opts?)"),(0,r.kt)("p",null,"Mocks a response for an operation based on example or response schema."),(0,r.kt)("p",null,"Returns an object with a status code and the mocked response."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'api.registerHandler(\n  "notImplemented",\n  async (c, req: Request, res: Response) => {\n    const { status, mock } = api.mockResponseForOperation(\n      c.operation.operationId\n    );\n    return res.status(status).json(mock);\n  }\n);\n')),(0,r.kt)("h4",{id:"parameter-operationid-1"},"Parameter: operationId"),(0,r.kt)("p",null,"The operationId of the operation for which to mock the response"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"parameter-opts-1"},"Parameter: opts"),(0,r.kt)("p",null,"Optional. Options for mocking."),(0,r.kt)("h4",{id:"parameter-optsresponsestatus"},"Parameter: opts.responseStatus"),(0,r.kt)("p",null,"Optional. The response code of the response to mock (default: 200)"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"parameter-optsmediatype"},"Parameter: opts.mediaType"),(0,r.kt)("p",null,"Optional. The media type of the response to mock (default: application/json)"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"parameter-optsexample"},"Parameter: opts.example"),(0,r.kt)("p",null,"Optional. The specific example to use (if operation has multiple examples)"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h3",{id:"registersecurityhandlername-handler"},".registerSecurityHandler(name, handler)"),(0,r.kt)("p",null,"Registers a security handler for a security scheme."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'api.registerSecurityHandler("ApiKey", (c) => {\n  const authorized =\n    c.request.headers["x-api-key"] === "SuperSecretPassword123";\n  return authorized;\n});\n')),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/docs/openapi-backend/security-handlers"},"Security Handlers")),(0,r.kt)("h4",{id:"parameter-name"},"Parameter: name"),(0,r.kt)("p",null,"The name of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#securitySchemeObject"},"Security Scheme"),"\nto register a handler for."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"parameter-handler-1"},"Parameter: handler"),(0,r.kt)("p",null,"The security handler."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Handler | ErrorHandler")),(0,r.kt)("h3",{id:"router"},".router"),(0,r.kt)("p",null,"OpenAPIBackend instances expose an instance of ",(0,r.kt)("a",{parentName:"p",href:"#class-openapirouter"},"OpenAPIRouter"),"\ncreated during ",(0,r.kt)("a",{parentName:"p",href:"#init"},(0,r.kt)("inlineCode",{parentName:"a"},"init()"))," to be used for matching requests to their\nOpenAPI operations."),(0,r.kt)("h3",{id:"validator"},".validator"),(0,r.kt)("p",null,"OpenAPIBackend instances expose an instance of ",(0,r.kt)("a",{parentName:"p",href:"#class-openapivalidator"},"OpenAPIValidator"),"\ncreated during ",(0,r.kt)("a",{parentName:"p",href:"#init"},(0,r.kt)("inlineCode",{parentName:"a"},"init()"))," to be used for validating schemas."),(0,r.kt)("h2",{id:"class-openapirouter"},"Class OpenAPIRouter"),(0,r.kt)("p",null,"OpenAPIRouter is an internal class that matches an abstract Request object to\nan OpenAPI operation."),(0,r.kt)("p",null,"Calling the ",(0,r.kt)("a",{parentName:"p",href:"#init"},"init method")," creates an instance of OpenAPIRouter which can\nbe publicly accessed via the OpenAPIBackend.router property."),(0,r.kt)("p",null,"The OpenAPIRouter class is exported from the ",(0,r.kt)("inlineCode",{parentName:"p"},"openapi-backend")," module:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { OpenAPIRouter } from "openapi-backend";\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const { OpenAPIRouter } = require("openapi-backend");\n')),(0,r.kt)("p",null,"You can also directly import the class from the submodule:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { OpenAPIRouter } from "openapi-backend/router";\n')),(0,r.kt)("h3",{id:"new-openapirouteropts"},"new OpenAPIRouter(opts)"),(0,r.kt)("p",null,"Creates an instance of OpenAPIRouter and returns it."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const router = new OpenAPIRouter({\n  definition: api.document,\n  apiRoot: "/",\n  ignoreTrailingSlashes: true,\n});\n')),(0,r.kt)("h4",{id:"parameter-opts-2"},"Parameter: opts"),(0,r.kt)("p",null,"Constructor options"),(0,r.kt)("h4",{id:"parameter-optsdefinition-1"},"Parameter: opts.definition"),(0,r.kt)("p",null,"The OpenAPI definition as a ",(0,r.kt)("a",{parentName:"p",href:"#document-object"},"Document object"),"."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Document")),(0,r.kt)("h4",{id:"parameter-optsapiroot-1"},"Parameter: opts.apiRoot"),(0,r.kt)("p",null,'Optional. The root URI of your api. All paths will be matched relative to apiRoot (default: "/")'),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"parameter-optsignoretrailingslashes-1"},"Parameter: opts.ignoreTrailingSlashes"),(0,r.kt)("p",null,"Optional. Whether to ignore trailing slashes when routing (default: true)"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h3",{id:"matchoperationreq"},".matchOperation(req)"),(0,r.kt)("p",null,"Matches a request to an API operation (router) and returns the matched ",(0,r.kt)("a",{parentName:"p",href:"#operation-object"},"Operation Object"),". Returns\n",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," if no operation was matched."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const operation = api.router.matchOperation({\n  method: "GET",\n  path: "/pets",\n  headers: { accept: "application/json" },\n});\n')),(0,r.kt)("h4",{id:"parameter-req-1"},"Parameter: req"),(0,r.kt)("p",null,"A request to match to an Operation."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"#request-object"},(0,r.kt)("inlineCode",{parentName:"a"},"Request"))),(0,r.kt)("h3",{id:"getoperations"},".getOperations()"),(0,r.kt)("p",null,"Flattens operations into a simple array of ",(0,r.kt)("a",{parentName:"p",href:"#operation-object"},"Operation objects")," easy to work with."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const operations = api.router.getOperations();\nconsole.log(`There are ${operations.length} operations in this api`);\n")),(0,r.kt)("h3",{id:"getoperationoperationid"},".getOperation(operationId)"),(0,r.kt)("p",null,"Gets a single operation by its operationId."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const operation = api.router.getOperation("getPets");\nconsole.log(`The tags for getPets are: ${operation.tags.join(", ")}`);\n')),(0,r.kt)("h4",{id:"parameter-operationid-2"},"Parameter: operationId"),(0,r.kt)("p",null,"The operationId of the operation to get."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h3",{id:"parserequestreq-operation"},".parseRequest(req, operation?)"),(0,r.kt)("p",null,"Parses and normalizes a request."),(0,r.kt)("p",null,"This method used to construct the parsed request for ",(0,r.kt)("a",{parentName:"p",href:"#context-object"},"Context objects"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Parses body into an object"),(0,r.kt)("li",{parentName:"ol"},"Parses query parameters from query string"),(0,r.kt)("li",{parentName:"ol"},"Parses cookies from the cookie header"),(0,r.kt)("li",{parentName:"ol"},"Parses path parameters from the request uri and passed operation path template"),(0,r.kt)("li",{parentName:"ol"},"Strips apiRoot from path")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const parsedRequest = api.router.parseRequest(\n  {\n    method: "GET",\n    path: "/v1/pet/8?fields=id,name",\n    headers: {\n      accept: "application/json",\n      cookie: "token=abc123;path=/",\n    },\n  },\n  api.getOperation("getPetById")\n);\n\nassert(parsedRequest.method, "get");\nassert(parsedRequest.query.fields, ["id", "name"]);\nassert(parsedRequest.cookies.token, "abc123");\nassert(parsedRequest.path, "/pet/8");\nassert(parsedRequest.params.id, "8");\n')),(0,r.kt)("h4",{id:"parameter-req-2"},"Parameter: req"),(0,r.kt)("p",null,"A request to parse."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"#request-object"},(0,r.kt)("inlineCode",{parentName:"a"},"Request"))),(0,r.kt)("h4",{id:"parameter-operation"},"Parameter: operation"),(0,r.kt)("p",null,"Optional. An operation object to match the request with. Used to parse path and query parameters according to operation spec."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h2",{id:"class-openapivalidator"},"Class OpenAPIValidator"),(0,r.kt)("p",null,"OpenAPIValidator is an internal class for performing validations against json\nschemas in an OpenAPI definition."),(0,r.kt)("p",null,"Calling the ",(0,r.kt)("a",{parentName:"p",href:"#init"},"init method")," creates an instance of OpenAPIValidator which can\nbe publicly accessed via the OpenAPIBackend.validator property."),(0,r.kt)("h3",{id:"new-openapivalidatoropts"},"new OpenAPIValidator(opts)"),(0,r.kt)("p",null,"Creates an instance of OpenAPIValidator and returns it."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const validator = new OpenAPIValidator({\n  definition: api.document,\n  router: new OpenAPIRouter()\n  ajvOpts: { unknownFormats: true },\n  lazyCompileValidators: false,\n  customizeAjv: (originalAjv, ajvOpts, validationContext) => new Ajv(),\n});\n")),(0,r.kt)("p",null,"The OpenAPIValidator class is exported from the ",(0,r.kt)("inlineCode",{parentName:"p"},"openapi-backend")," module:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { OpenAPIValidator } from "openapi-backend";\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const { OpenAPIValidator } = require("openapi-backend");\n')),(0,r.kt)("p",null,"You can also directly import the class from the submodule:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { OpenAPIValidator } from "openapi-backend/validation";\n')),(0,r.kt)("h4",{id:"parameter-opts-3"},"Parameter: opts"),(0,r.kt)("p",null,"Constructor options"),(0,r.kt)("h4",{id:"parameter-optsdefinition-2"},"Parameter: opts.definition"),(0,r.kt)("p",null,"The OpenAPI definition as a ",(0,r.kt)("a",{parentName:"p",href:"#document-object"},"Document object"),"."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Document")),(0,r.kt)("h4",{id:"parameter-optsajvopts-1"},"Parameter: opts.ajvOpts"),(0,r.kt)("p",null,"Optional. The default AJV options to use for validation. See ",(0,r.kt)("a",{parentName:"p",href:"https://ajv.js.org/#options"},"available options")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"AjvOpts")),(0,r.kt)("h4",{id:"parameter-optsrouter"},"Parameter: opts.router"),(0,r.kt)("p",null,"Optional. Passed instance of OpenAPIRouter. Will create new instance from definition object if not passed."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"#class-openapirouter"},(0,r.kt)("inlineCode",{parentName:"a"},"OpenAPIRouter"))),(0,r.kt)("h4",{id:"parameter-optslazycompilevalidators"},"Parameter: opts.lazyCompileValidators"),(0,r.kt)("p",null,"Optional. When set to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," skips precompiling Ajv validators and compiles only when needed. Useful for optimizing for init time e.g. in Lambda."),(0,r.kt)("p",null,"This option is applied when the ",(0,r.kt)("a",{parentName:"p",href:"#parameter-optsquick"},"OpenAPIBackend ",(0,r.kt)("inlineCode",{parentName:"a"},"quick")," parameter")," is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")),(0,r.kt)("h4",{id:"parameter-optscustomizeajvoriginalajv-ajvopts-validationcontext-1"},"Parameter: opts.customizeAjv(originalAjv, ajvOpts, validationContext)"),(0,r.kt)("p",null,"Optional. Customizer function to use custom Ajv for validation."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"AjvCustomizer")),(0,r.kt)("p",null,"Takes in three arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"originalAjv")," the original Ajv instance created by OpenAPIBackend"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ajvOpts")," the opts for the original Ajv instance"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"validationContext")," the context in which this Ajv instance will be used. One of:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'requestBodyValidator'")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'paramsValidator'")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'responseValidator'")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'responseHeadersValidator'"))))),(0,r.kt)("p",null,"Returns an Ajv instance."),(0,r.kt)("h3",{id:"validaterequestreq-operation"},".validateRequest(req, operation?)"),(0,r.kt)("p",null,"Validates a request and returns the result."),(0,r.kt)("p",null,"The method will first match the request to an API operation and use the pre-compiled Ajv validation schema to validate\nit."),(0,r.kt)("p",null,"Normally, you wouldn't need to explicitly call ",(0,r.kt)("inlineCode",{parentName:"p"},".validateRequest()")," because ",(0,r.kt)("inlineCode",{parentName:"p"},".handleRequest()")," calls it for you when\nvalidation is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". But if you like, you can use it to just do request validation separately from handling."),(0,r.kt)("p",null,"Returns a ",(0,r.kt)("a",{parentName:"p",href:"#validationresult-object"},"ValidationResult object"),"."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const valid = api.validateRequest({\n  method: req.method,\n  path: req.path,\n  body: req.body,\n  query: req.query,\n  headers: req.headers,\n});\nif (valid.errors) {\n  // there were errors\n}\n")),(0,r.kt)("h4",{id:"parameter-req-3"},"Parameter: req"),(0,r.kt)("p",null,"A request to validate."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"#request-object"},(0,r.kt)("inlineCode",{parentName:"a"},"Request"))),(0,r.kt)("h4",{id:"parameter-operation-1"},"Parameter: operation"),(0,r.kt)("p",null,"Optional. The Operation object or operationId to validate against."),(0,r.kt)("p",null,"If omitted, ",(0,r.kt)("a",{parentName:"p",href:"#matchoperation-req"},(0,r.kt)("inlineCode",{parentName:"a"},".matchOperation()"))," will be used to match the operation first."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"#operation-object"},(0,r.kt)("inlineCode",{parentName:"a"},"Operation"))," or ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," (operationId)"),(0,r.kt)("h3",{id:"validateresponseres-operation-statuscode"},".validateResponse(res, operation, statusCode?)"),(0,r.kt)("p",null,"Validates a response and returns the result."),(0,r.kt)("p",null,"The method will use the pre-compiled Ajv validation schema to validate the given response."),(0,r.kt)("p",null,"You can optionally provide a status code for more accurate validation."),(0,r.kt)("p",null,"Returns a ",(0,r.kt)("a",{parentName:"p",href:"#validationresult-object"},"ValidationResult object"),"."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const valid = api.validateResponse({ name: "Garfield" }, "getPetById");\nif (valid.errors) {\n  // there were errors\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const valid = api.validateResponse({ name: "Unknown" }, "getPetById", 200);\nif (valid.errors) {\n  // there were errors\n}\n')),(0,r.kt)("h4",{id:"parameter-res"},"Parameter: res"),(0,r.kt)("p",null,"The response to validate."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"any")),(0,r.kt)("h4",{id:"parameter-operation-2"},"Parameter: operation"),(0,r.kt)("p",null,"The Operation object or operationId to validate against."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"#operation-object"},(0,r.kt)("inlineCode",{parentName:"a"},"Operation"))," or ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"parameter-statuscode"},"Parameter: statusCode"),(0,r.kt)("p",null,"The HTTP response status code."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h3",{id:"validateresponseheadersheaders-operation-opts"},".validateResponseHeaders(headers, operation, opts?)"),(0,r.kt)("p",null,"Validates response headers and returns the result."),(0,r.kt)("p",null,"The method will use the pre-compiled Ajv validation schema to validate the given response."),(0,r.kt)("p",null,"Returns a ",(0,r.kt)("a",{parentName:"p",href:"#validationresult-object"},"ValidationResult object"),"."),(0,r.kt)("p",null,"Example usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const valid = api.validateResponseHeaders(\n  {\n    "Content-Type": "text/plain",\n  },\n  "getPetById",\n  {\n    statusCode: 200,\n    setMatchType: "exact",\n  }\n);\nif (valid.errors) {\n  // there were errors\n}\n')),(0,r.kt)("h4",{id:"parameter-headers"},"Parameter: headers"),(0,r.kt)("p",null,"The response headers to validate."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"any")),(0,r.kt)("h4",{id:"parameter-operation-3"},"Parameter: operation"),(0,r.kt)("p",null,"The Operation object or operationId to validate against."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"#operation-object"},(0,r.kt)("inlineCode",{parentName:"a"},"Operation"))," or ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"parameter-opts-4"},"Parameter: opts"),(0,r.kt)("p",null,"Optional. Options for validate the response headers."),(0,r.kt)("h4",{id:"parameter-optsstatuscode"},"Parameter: opts.statusCode"),(0,r.kt)("p",null,"Optional. The status code of the response."),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("h4",{id:"parameter-optssetmatchtype"},"Parameter: opts.setMatchType"),(0,r.kt)("p",null,"Optional. The type of set matching to perform, in relation with the set of headers defined in your spec.\nIt can be ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"superset"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"subset")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"exact"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"any"),": Skip checks for missing or additional headers. It only checks that the types of the headers are matching with the spec."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"superset"),": Check that ",(0,r.kt)("inlineCode",{parentName:"li"},"headers")," is a superset of the headers defined in your spec. In other words, you can have headers in ",(0,r.kt)("inlineCode",{parentName:"li"},"headers")," that are described in your spec."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"subset"),": Check that ",(0,r.kt)("inlineCode",{parentName:"li"},"headers")," is a subset of the headers defined in your spec. In other words, you can have headers in you spec that are not present in ",(0,r.kt)("inlineCode",{parentName:"li"},"headers"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"exact"),": Check that ",(0,r.kt)("inlineCode",{parentName:"li"},"headers")," exactly match the headers defined in your spec.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"SetMatchType")),(0,r.kt)("h2",{id:"operation-handlers"},"Operation Handlers"),(0,r.kt)("p",null,"You can register ",(0,r.kt)("em",{parentName:"p"},"Operation Handlers")," for operationIds specified by your OpenAPI document."),(0,r.kt)("p",null,"These get called with the ",(0,r.kt)("inlineCode",{parentName:"p"},".handleRequest()")," method after routing and (optionally) validation is finished."),(0,r.kt)("p",null,"The first argument of the handler is the ",(0,r.kt)("a",{parentName:"p",href:"#context-object"},"Context object")," and rest are passed from ",(0,r.kt)("inlineCode",{parentName:"p"},".handleRequest()"),"\narguments, starting from the second one."),(0,r.kt)("p",null,"Example handler for Express"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'async function getPetByIdHandler(c, req, res) {\n  const id = c.request.params.id;\n  const pet = await pets.getPetById(id);\n  return res.status(200).json({ result: pet });\n}\napi.register("getPetById", getPetByIdHandler);\n')),(0,r.kt)("p",null,"There are two different ways to register operation handlers:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In the ",(0,r.kt)("a",{parentName:"li",href:"#new-openapibackendopts"},(0,r.kt)("inlineCode",{parentName:"a"},"new OpenAPIBackend"))," constructor options"),(0,r.kt)("li",{parentName:"ol"},"With the ",(0,r.kt)("a",{parentName:"li",href:"##registeroperationid-handler"},(0,r.kt)("inlineCode",{parentName:"a"},".register()"))," method")),(0,r.kt)("p",null,"In addition to the operationId handlers, you should also specify special handlers for different situtations:"),(0,r.kt)("h3",{id:"validationfail-handler"},"validationFail Handler"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"validationFail")," handler gets called by ",(0,r.kt)("inlineCode",{parentName:"p"},".handleRequest()")," if the input validation fails for a request."),(0,r.kt)("p",null,"HINT: You should probably return a 400 status code from this handler."),(0,r.kt)("p",null,"Example handler:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'function validationFailHandler(c, req, res) {\n  return res.status(400).json({ status: 400, err: c.validation.errors });\n}\napi.register("validationFail", validationFailHandler);\n')),(0,r.kt)("h3",{id:"notfound-handler"},"notFound Handler"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"notFound")," handler gets called by ",(0,r.kt)("inlineCode",{parentName:"p"},".handleRequest()")," if the path doesn't\nmatch an operation in the API definitions."),(0,r.kt)("p",null,"HINT: You should probably return a 404 status code from this handler."),(0,r.kt)("p",null,"Example handler:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'function notFound(c, req, res) {\n  return res.status(404).json({ status: 404, err: "Not found" });\n}\napi.register("notFound", notFound);\n')),(0,r.kt)("h3",{id:"methodnotallowed-handler"},"methodNotAllowed Handler"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"methodNotAllowed")," handler gets called by ",(0,r.kt)("inlineCode",{parentName:"p"},".handleRequest()")," if request\nmethod does not match any operations for the path."),(0,r.kt)("p",null,"If this handler isn't registered, the ",(0,r.kt)("a",{parentName:"p",href:"#notfound-handler"},"notFound Handler")," will be used instead."),(0,r.kt)("p",null,"HINT: You should probably return a 405 status code from this handler."),(0,r.kt)("p",null,"Example handler:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'function methodNotAllowed(c, req, res) {\n  return res.status(405).json({ status: 405, err: "Method not allowed" });\n}\napi.register("methodNotAllowed", methodNotAllowed);\n')),(0,r.kt)("h3",{id:"notimplemented-handler"},"notImplemented Handler"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"notImplemented")," handler gets called by ",(0,r.kt)("inlineCode",{parentName:"p"},".handleRequest()")," if no other Operation Handler has been registered for\nthe matched operation."),(0,r.kt)("p",null,"HINT: You can either mock the response or return a 501 status code."),(0,r.kt)("p",null,"Example handler:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'function notImplementedHandler(c, req, res) {\n  return res\n    .status(404)\n    .json({ status: 501, err: "No handler registered for operation" });\n}\napi.register("notImplemented", notImplementedHandler);\n')),(0,r.kt)("h3",{id:"unauthorizedhandler-handler"},"unauthorizedHandler Handler"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"unauthorizedHandler")," handler gets called by ",(0,r.kt)("inlineCode",{parentName:"p"},".handleRequest()")," if security\nrequirements are not met after checking ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#securityRequirementObject"},"Security Requirements"),"\nand calling their ",(0,r.kt)("a",{parentName:"p",href:"/docs/openapi-backend/security-handlers"},"Security Handlers"),"."),(0,r.kt)("p",null,"HINT: You should probably return a 401 or 403 code from this handler and\ninstruct the client to authenticate."),(0,r.kt)("p",null,"Example handler:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'function unauthorizedHandler(c, req, res) {\n  return res\n    .status(401)\n    .json({ status: 401, err: "Please authenticate first" });\n}\napi.register("unauthorizedHandler", unauthorizedHandler);\n')),(0,r.kt)("p",null,"If no ",(0,r.kt)("inlineCode",{parentName:"p"},"unauthorizedHandler")," is registered, the Security Handlers will still be\ncalled and their output and the authorization status for the request can be\nchecked in operation handlers via the ",(0,r.kt)("a",{parentName:"p",href:"#context-object"},(0,r.kt)("inlineCode",{parentName:"a"},"context.security")," property"),"."),(0,r.kt)("h3",{id:"postresponsehandler-handler"},"postResponseHandler Handler"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"postResponseHandler")," handler gets called by ",(0,r.kt)("inlineCode",{parentName:"p"},".handleRequest()")," after resolving the response handler."),(0,r.kt)("p",null,"The return value of the response handler will be passed in the context object ",(0,r.kt)("inlineCode",{parentName:"p"},"response")," property."),(0,r.kt)("p",null,"HINT: You can use the postResponseHandler to validate API responses against your response schema"),(0,r.kt)("p",null,"Example handler:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'function postResponseHandler(c, req, res) {\n  const valid = c.api.validateResponse(c.response, c.operation);\n  if (valid.errors) {\n    // response validation failed\n    return res.status(502).json({ status: 502, err: valid.errors });\n  }\n  return res.status(200).json(c.response);\n}\napi.register("postResponseHandler", postResponseHandler);\n')),(0,r.kt)("h2",{id:"interfaces"},"Interfaces"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"openapi-backend")," module exports type definitions for TypeScript users. You can import them like you would normally."),(0,r.kt)("h3",{id:"document-object"},"Document Object"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Document")," interface is a JavaScript object representation of an OpenAPI specification document."),(0,r.kt)("p",null,"OpenAPIBackend uses type definitions from ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/openapi-types"},(0,r.kt)("inlineCode",{parentName:"a"},"openapi-types")),", but\nre-exports the Document interface for ease of use."),(0,r.kt)("p",null,"NOTE: Only OpenAPI v3+ documents are currently supported."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Document } from "openapi-backend";\n')),(0,r.kt)("p",null,"An example Document Object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const document: Document = {\n  openapi: "3.0.1",\n  info: {\n    title: "My API",\n    version: "1.0.0",\n  },\n  paths: {\n    "/pets": {\n      get: {\n        operationId: "getPets",\n        responses: {\n          200: { description: "ok" },\n        },\n      },\n    },\n    "/pets/{id}": {\n      get: {\n        operationId: "getPetById",\n        responses: {\n          200: { description: "ok" },\n        },\n      },\n      parameters: [\n        {\n          name: "id",\n          in: "path",\n          required: true,\n          schema: {\n            type: "integer",\n          },\n        },\n      ],\n    },\n  },\n};\n')),(0,r.kt)("h3",{id:"operation-object"},"Operation Object"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Operation")," interface is an ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operationObject"},"OpenAPI Operation Object"),"\nextended with the path and method of the operation for easier use. It should also include the path base object's\nparameters in its ",(0,r.kt)("inlineCode",{parentName:"p"},"parameters")," property."),(0,r.kt)("p",null,"All JSON schemas in an Operation Object should be dereferenced i.e. not contain any ",(0,r.kt)("inlineCode",{parentName:"p"},"$ref")," properties."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Operation } from "openapi-backend";\n')),(0,r.kt)("p",null,"Example object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const operation: Operation = {\n  method: "patch",\n  path: "/pets/{id}",\n  operationId: "updatePetById",\n  parameters: [\n    {\n      name: "id",\n      in: "path",\n      required: true,\n      schema: {\n        type: "integer",\n        minimum: 0,\n      },\n    },\n  ],\n  requestBody: {\n    content: {\n      "application/json": {\n        schema: {\n          type: "object",\n          additionalProperties: false,\n          properties: {\n            name: {\n              type: "string",\n            },\n            age: {\n              type: "integer",\n            },\n          },\n        },\n      },\n    },\n  },\n  responses: {\n    200: {\n      description: "Pet updated succesfully",\n    },\n  },\n};\n')),(0,r.kt)("h3",{id:"context-object"},"Context Object"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Context")," object gets passed to ",(0,r.kt)("a",{parentName:"p",href:"#operation-handlers"},"Operation Handlers")," as the first argument."),(0,r.kt)("p",null,"It contains useful information like the ",(0,r.kt)("a",{parentName:"p",href:"#parsedrequest-object"},"parsed request"),",\nthe matched ",(0,r.kt)("a",{parentName:"p",href:"#operation-object"},"operation"),", ",(0,r.kt)("a",{parentName:"p",href:"#security-handlers"},"security handler"),"\nresults and input validation results for the request."),(0,r.kt)("p",null,"The context object also contains a reference to the OpenAPIBackend instance in ",(0,r.kt)("inlineCode",{parentName:"p"},"api")," property for easy access to\ninstance methods inside handlers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Context } from "openapi-backend";\n')),(0,r.kt)("p",null,"Example object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const context: Context = {\n  // reference to OpenAPIBackend instance\n  // can be used to access instance OpenAPI instance methods in handlers:\n  // - api.validateRequest()\n  // - api.validateResponse()\n  // - api.mockResponseForOperation()\n  api,\n  // the parsed request object\n  request: {\n    method: "post",\n    path: "/pets/1/treat",\n    params: { id: "1" },\n    headers: { accept: "application/json", cookie: "sessionid=abc123;" },\n    cookies: { sessionid: "abc123" },\n    query: { format: "json" },\n    body: \'{ "treat": "bone" }\',\n    requestBody: { treat: "bone" },\n  },\n  // the matched and dereferenced operation object for request\n  operation: {\n    method: "post",\n    path: "/pets",\n    operationId: "giveTreatToPetById",\n    summary: "Gives a treat to a pet",\n    description: "Adds a treat to the bowl where a pet can enjoy it.",\n    tags: ["pets"],\n    parameters: {\n      name: "id",\n      in: "path",\n      required: true,\n      schema: {\n        type: "integer",\n      },\n    },\n    requestBody: {\n      description: "A treat to give to the pet",\n      content: {\n        "application/json": {\n          schema: {\n            type: "object",\n            additionalProperties: false,\n            properties: {\n              treat: {\n                type: "string",\n              },\n            },\n            required: ["treat"],\n          },\n        },\n      },\n    },\n  },\n  // Ajv validation results for request\n  validation: {\n    valid: true,\n    errors: null,\n  },\n  // Security handlers results for request\n  security: {\n    authorized: true,\n    jwt: {\n      name: "John Doe",\n      email: "john@example.com",\n      iat: 1516239022,\n    },\n    basicAuth: false,\n  },\n  // Return value from operation handler (only passed to postResponseHandler)\n  response: {\n    message: "woof! thanks for the treat",\n  },\n};\n')),(0,r.kt)("h3",{id:"request-object"},"Request Object"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Request")," interface represents a generic HTTP request."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Request } from "openapi-backend";\n')),(0,r.kt)("p",null,"Example object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const request: Request = {\n  // HTTP method of the request\n  method: "POST",\n  // path of the request\n  path: "/pets/1/treat",\n  // HTTP request headers\n  headers: { accept: "application/json", cookie: "sessionid=abc123;" },\n  // parsed query parameters (optional), we also parse query params from the path property\n  query: { format: "json" },\n  // the request body (optional), either raw buffer/string or a parsed object/array\n  body: { treat: "bone" },\n};\n')),(0,r.kt)("h3",{id:"parsedrequest-object"},"ParsedRequest Object"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ParsedRequest")," interface represents a generic parsed HTTP request."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { ParsedRequest } from "openapi-backend";\n')),(0,r.kt)("p",null,"Example object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const parsedRequest: ParsedRequest = {\n  // HTTP method of the request (in lowercase)\n  method: "post",\n  // path of the request\n  path: "/pets/1/treat",\n  // the path params for the request\n  params: { id: "1" },\n  // HTTP request headers\n  headers: { accept: "application/json", cookie: "sessionid=abc123;" },\n  // the parsed cookies\n  cookies: { sessionid: "abc123" },\n  // parsed query parameters (optional), we also parse query params from the path property\n  query: { format: "json" },\n  // the request body (optional), either raw buffer/string or a parsed object/array\n  body: \'{ "treat": "bone" }\',\n  // the parsed request body\n  requestBody: { treat: "bone" },\n};\n')),(0,r.kt)("h3",{id:"validationresult-object"},"ValidationResult Object"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ValidationResult")," interface is an object containing the results from performed json schema validation."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"valid")," property is a boolean that tells you whether the validation succeeded (true) or not (false)."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"errors")," property is an array of ",(0,r.kt)("a",{parentName:"p",href:"https://ajv.js.org/#error-objects"},"Ajv ErrorObjects")," from the performed\nvalidation. If no errors were found, this property will be ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { ValidationResult } from "openapi-backend";\n')),(0,r.kt)("p",null,"Example object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const validationResult: ValidationResult = {\n  valid: false,\n  errors: [\n    {\n      keyword: "parse",\n      dataPath: "",\n      schemaPath: "#/requestBody",\n      params: [],\n      message: "Unable to parse JSON request body",\n    },\n  ],\n};\n')))}m.isMDXComponent=!0}}]);